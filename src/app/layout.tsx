// app/layout.tsx
import "~/styles/globals.css";

import { GeistSans } from "geist/font/sans";
import { type Metadata } from "next";
import {
  ClerkProvider,
  SignInButton,
  SignUpButton,
  SignedIn,
  SignedOut,
  UserButton,
} from "@clerk/nextjs";
import { TRPCReactProvider } from "~/trpc/react";

import {
  Navbar,
  NavbarItem,
  NavbarSection,
  NavbarSpacer,
} from "~/app/_components/navbar";
import {
  Sidebar,
  SidebarBody,
  SidebarItem,
  SidebarSection,
} from "~/app/_components/sidebar";
import { StackedLayout } from "~/app/_components/stacked-layout";
import { InboxIcon, MagnifyingGlassIcon } from "@heroicons/react/20/solid";
import { Button } from "./_components/button";

export const metadata: Metadata = {
  title: "Create T3 App",
  description: "Generated by create-t3-app",
  icons: [{ rel: "icon", url: "/favicon.ico" }],
};

const navItems = [
  { label: "Home", url: "/" },
  { label: "Events", url: "/events" },
  { label: "Orders", url: "/orders" },
  { label: "Broadcasts", url: "/broadcasts" },
  { label: "Settings", url: "/settings" },
];

export default function RootLayout({
  children,
}: Readonly<{ children: React.ReactNode }>) {
  return (
    <ClerkProvider>
      <html lang="en" className={`${GeistSans.variable}`}>
        <body>
          <TRPCReactProvider>
            <StackedLayout
              navbar={
                <Navbar>
                  <NavbarSection className="max-lg:hidden">
                    {navItems.map(({ label, url }) => (
                      <NavbarItem key={label} href={url}>
                        {label}
                      </NavbarItem>
                    ))}
                  </NavbarSection>
                  <NavbarSpacer />
                  <NavbarSection>
                    <NavbarItem href="/search" aria-label="Search">
                      <MagnifyingGlassIcon />
                    </NavbarItem>
                    <NavbarItem href="/inbox" aria-label="Inbox">
                      <InboxIcon />
                    </NavbarItem>
                    <SignedOut>
                      <SignInButton mode="modal">
                        <Button className="cursor-pointer" color="dark">
                          Sign in
                        </Button>
                      </SignInButton>
                      <SignUpButton mode="modal">
                        <Button className="cursor-pointer" color="dark">
                          Sign up
                        </Button>
                      </SignUpButton>
                    </SignedOut>
                    <SignedIn>
                      <UserButton />
                    </SignedIn>
                  </NavbarSection>
                </Navbar>
              }
              sidebar={
                <Sidebar>
                  <SidebarBody>
                    <SidebarSection>
                      {navItems.map(({ label, url }) => (
                        <SidebarItem key={label} href={url}>
                          {label}
                        </SidebarItem>
                      ))}
                    </SidebarSection>
                  </SidebarBody>
                </Sidebar>
              }
            >
              {children}
            </StackedLayout>
          </TRPCReactProvider>
        </body>
      </html>
    </ClerkProvider>
  );
}
